datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Widget {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
}

model TradingPair {
  id    Int      @id @default(sequence())
  date  DateTime
  open  Float
  high  Float
  low   Float
  close Float
}

model Market {
  id     Int    @id @default(sequence())
  name   String
  price  Float
  change Float
}

model OrderBook {
  id          Int      @id @default(sequence())
  symbol      String
  bidPrice    Float
  askPrice    Float
  bidQuantity Float
  askQuantity Float
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
}

model Deposit {
  id        Int      @id @default(sequence())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  walletId  Int
  wallet    Wallet   @relation(fields: [walletId], references: [id])
  amount    Float
  currency  String   @default("ETH")
  status    String   @default("PENDING") // PENDING, COMPLETED, FAILED
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Wallet {
  id        Int       @id @default(sequence())
  balance   Float     @default(0.0)
  currency  String    @default("ETH")
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  deposits  Deposit[] // Relation to the Deposit model
  address   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model User {
  id        Int         @id @default(sequence())
  username  String      @unique
  email     String      @unique
  password  String
  Wallets   Wallet[]
  deposits  Deposit[] // Relation to the Deposit model
  createdAt DateTime    @default(now())
  OrderBook OrderBook[]

  @@index([email])
}
